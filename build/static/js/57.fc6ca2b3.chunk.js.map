{"version":3,"sources":["views/dashboard/store/orders/OrderDetail.js","repositories/order.repository.js"],"names":["OrderDetail","orderRepository","OrderRepository","mounted","useMounted","settings","useSettings","useState","order","setOrder","id","useParams","console","log","useEffect","gtm","push","event","getOrder","useCallback","a","getOrderById","data","status","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","m","startIcon","md","xl","xs","cfg","EndpointConfig","axios","create","baseURL","URL_DEV","headers","headerToken","this","ws","get","res","endpoint","body","post"],"mappings":"8SA8IeA,UAhIK,WAClB,IAAMC,EAAkB,IAAIC,IACtBC,EAAUC,cACRC,EAAaC,cAAbD,SACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAOC,cAAPD,GACRE,QAAQC,IAAIH,GAEZI,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAEH,IAAMC,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,+EAENnB,EAAgBoB,aAAaX,GAFvB,OAIL,OAFdY,EAFmB,QAIhBC,QAAkC,QAAhBD,EAAKC,QAC9Bd,EAASa,EAAKA,MALS,gDAQzBV,QAAQY,MAAR,MARyB,yDAU1B,CAACrB,IAMJ,OAJAW,qBAAU,WACRI,MACC,CAACA,IAECV,EAKH,qCACE,cAAC,IAAD,UACE,qEAEF,cAAC,IAAD,CACEiB,GAAI,CACFC,gBAAiB,qBACjBC,UAAW,OACXC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,WAAUxB,EAASyB,SAAU,KAAxC,UACE,eAAC,IAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,QAAS,EAHX,UAKE,eAAC,IAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CACEC,MAAM,cACNC,QAAQ,KAFV,2BAMA,eAAC,IAAD,CACE,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtCb,GAAI,CAAEc,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEJ,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,uBAQA,cAAC,IAAD,CACED,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,wBAQA,cAAC,IAAD,CACED,MAAM,gBACNC,QAAQ,YAFV,0BAQJ,cAAC,IAAD,CAAMF,MAAI,EAAV,SACE,cAAC,IAAD,CAAKT,GAAI,CAAEkB,GAAI,GAAf,SACE,cAAC,IAAD,CACER,MAAM,UACNS,UAAW,cAAC,IAAD,CAAeN,SAAS,UACnCb,GAAI,CAAEkB,EAAG,GACTP,QAAQ,YAJV,yBAWN,cAAC,IAAD,CAAKX,GAAI,CAAEc,GAAI,GAAf,SACE,cAAC,IAAD,CACER,WAAS,EACTE,QAAS,EAFX,SAIE,cAAC,IAAD,CACEC,MAAI,EACJW,GAAI,GACJC,GAAI,GACJC,GAAI,GAJN,SAME,cAAC,IAAD,CAAcvC,MAAOA,kBAjF1B,O,2ICxCUN,E,gFAEnB,WACE,IAAM8C,EAAM,IAAIC,IAKhB,OAJWC,IAAMC,OAAO,CACtBC,QAASJ,EAAIK,QACbC,QAASN,EAAIO,kB,iEAKjB,4BAAAnC,EAAA,4DACmB,cADnB,SAEoBoC,KAAKC,GAAGC,IADT,eADnB,cAEQC,EAFR,yBAGSA,EAAIrC,MAHb,gD,uHAMA,WAAmBZ,GAAnB,iBAAAU,EAAA,6DACQwC,EADR,sBACkClD,GADlC,SAEoB8C,KAAKC,GAAGC,IAAIE,GAFhC,cAEQD,EAFR,yBAGSA,EAAIrC,MAHb,gD,uHAaA,WAAkBuC,GAAlB,eAAAzC,EAAA,4DACmB,cADnB,SAEoBoC,KAAKC,GAAGK,KADT,cACwBD,GAF3C,cAEQF,EAFR,yBAGSA,GAHT,gD","file":"static/js/57.fc6ca2b3.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\n// import { orderApi } from '../../../../__fakeApi__/orderApi';\n// import { OrderItems, OrderSummary } from '../../../../components/dashboard/order';\nimport { OrderSummary } from '../../../../components/dashboard/order';\nimport useMounted from '../../../../hooks/useMounted';\nimport useSettings from '../../../../hooks/useSettings';\nimport ChevronRightIcon from '../../../../icons/ChevronRight';\nimport PencilAltIcon from '../../../../icons/PencilAlt';\nimport gtm from '../../../../lib/gtm';\nimport OrderRepository from '../../../../repositories/order.repository';\n\nconst OrderDetail = () => {\n  const orderRepository = new OrderRepository();\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [order, setOrder] = useState(null);\n  const { id } = useParams();\n  console.log(id);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getOrder = useCallback(async () => {\n    try {\n      const data = await orderRepository.getOrderById(id);\n\n      if (data.status === 200 || data.status === '200') {\n        setOrder(data.data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getOrder();\n  }, [getOrder]);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Order Details | Mac</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Order Details\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Management\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Orders\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PencilAltIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"contained\"\n                >\n                  Edit\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={12}\n                xl={12}\n                xs={12}\n              >\n                <OrderSummary order={order} />\n              </Grid>\n              {/* <Grid\n                item\n                md={8}\n                xl={9}\n                xs={12}\n              >\n                <OrderItems orderItems={order.items} />\n              </Grid> */}\n            </Grid>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default OrderDetail;\n","import axios from 'axios';\nimport { EndpointConfig } from '../config/config';\n\nexport default class OrderRepository {\n  // Definir el cliente Axios para consumir el servicio\n  get ws() {\n    const cfg = new EndpointConfig();\n    const ws = axios.create({\n      baseURL: cfg.URL_DEV,\n      headers: cfg.headerToken(),\n    });\n    return ws;\n  }\n\n  async getAllOrders() {\n    const endpoint = '/deliveries';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getOrderById(id) {\n    const endpoint = `/deliveries/${id}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  //   async update(id, body) {\n  //     const endpoint = `/users/${id}`;\n\n  //     let res = await this.ws.put(endpoint, body);\n  //     return res;\n  //   }\n\n  async createOrder(body) {\n    const endpoint = '/deliveries';\n    const res = await this.ws.post(endpoint, body);\n    return res;\n  }\n\n  //   async remove(id) {\n  //     const endpoint = `/users/${id}`;\n\n  //     let res = await this.ws.delete(endpoint);\n  //     return res;\n  //   }\n}\n"],"sourceRoot":""}