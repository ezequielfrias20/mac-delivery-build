{"version":3,"sources":["components/dashboard/driver/AccountGeneralSettings.js","views/dashboard/drivers/DriverDetail.js","../node_modules/@material-ui/core/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@material-ui/core/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","repositories/drivers.repository.js"],"names":["AccountGeneralSettings","props","driver","other","Grid","container","spacing","item","lg","md","xl","xs","Card","CardContent","Box","sx","alignItems","display","flexDirection","textAlign","p","border","theme","palette","divider","borderRadius","Avatar","src","vehicle_image","height","width","Typography","color","mt","mb","variant","name","Link","component","RouterLink","to","Button","m","onClick","console","log","toast","success","CardHeader","title","Divider","Table","TableBody","TableRow","TableCell","lastname","dni","phone","vehicle_plate","flag_terms_accepte","DriverDetail","settings","useSettings","driversRepository","DriversRepository","useState","client","setClient","id","useParams","navigate","useNavigate","useEffect","getDriverById","then","res","data","catch","error","gtm","push","event","Object","keys","length","backgroundColor","minHeight","py","Container","maxWidth","compact","justifyContent","Breadcrumbs","separator","ChevronRight","fontSize","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","experimentalStyled","ButtonBase","skipSx","_extends","marginLeft","marginRight","mode","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","BreadcrumbCollapsed","styleProps","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","concat","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","focusable","querySelector","focus","renderItemsBeforeAndAfter","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","subheader","CardHeaderAvatar","avatar","flex","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","_jsxs","as","cfg","EndpointConfig","axios","create","baseURL","URL_DEV","headers","headerToken","a","this","ws","get","endpoint"],"mappings":"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","file":"static/js/46.a5ad69c5.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n// import * as Yup from 'yup';\n// import { Formik } from 'formik';\nimport {\n  // Autocomplete,\n  Avatar,\n  Box,\n  Button,\n  Card,\n  // CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  // FormHelperText,\n  Grid,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  // Switch,\n  // TextField,\n  Typography\n} from '@material-ui/core';\n// import useAuth from '../../../../hooks/useAuth';\n// import wait from '../../../../utils/wait';\n// import countries from './countries';\n\nconst AccountGeneralSettings = (props) => {\n  const { driver, ...other } = props;\n  // const { user } = useAuth();\n\n  const acceptDriver = () => {\n    console.log('acepto driver');\n    toast.success('Driver aceptado!');\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      {...other}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n                textAlign: 'center'\n              }}\n            >\n              <Box\n                sx={{\n                  p: 1,\n                  border: (theme) => `1px dashed ${theme.palette.divider}`,\n                  borderRadius: '50%'\n                }}\n              >\n                <Avatar\n                  src={driver.vehicle_image}\n                  sx={{\n                    height: 100,\n                    width: 100\n                  }}\n                />\n              </Box>\n              <Typography\n                color=\"textPrimary\"\n                sx={{ mt: 1, mb: 1 }}\n                variant=\"h5\"\n              >\n                {driver.name}\n              </Typography>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                Rango:\n                {' '}\n                <Link\n                  color=\"primary\"\n                  component={RouterLink}\n                  to=\"/dashboard/account\"\n                >\n                  Driver\n                </Link>\n              </Typography>\n              <Button\n                color=\"primary\"\n                // startIcon={<PlusIcon fontSize=\"small\" />}\n                sx={{ m: 1 }}\n                component={RouterLink}\n                variant=\"contained\"\n                to=\"/dashboard/drivers\"\n                onClick={acceptDriver}\n              >\n                Aceptar Driver\n              </Button>\n            </Box>\n          </CardContent>\n          {/* <CardActions>\n            <Button\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Remove Picture\n            </Button>\n          </CardActions> */}\n        </Card>\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <Card>\n          <CardHeader title=\"Detalle del Driver\" />\n          <Divider />\n          <CardContent>\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Nombre\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {`${driver.name} ${driver.lastname}`}\n                    </Typography>\n                    {/* <Label color={isVerified ? 'success' : 'error'}>\n                      {isVerified ? 'Email verified' : 'Email not verified'}\n                    </Label> */}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      DNI\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {driver.dni}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Telefono\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {driver.phone}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Placa de Vehículo\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {driver.vehicle_plate}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                {/* {driver.orders && (\n                  <TableRow>\n                    <TableCell>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"subtitle2\"\n                      >\n                        Cantidad de Órdenes\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        {driver.orders.length}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                )} */}\n                <TableRow>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Dirección\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {/* {driver.address} */}\n                      N/A\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Terminos y Condiciones\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {driver.flag_terms_accepte ? 'Aceptado' : 'Rechazado'}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nAccountGeneralSettings.propTypes = {\n  driver: PropTypes.object\n};\n\nexport default AccountGeneralSettings;\n","import { useEffect, useState } from 'react';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Breadcrumbs,\n  Container,\n  Divider,\n  Grid,\n  Link,\n  // Tab,\n  // Tabs,\n  Typography\n} from '@material-ui/core';\nimport AccountGeneralSettings from '../../../components/dashboard/driver/AccountGeneralSettings';\nimport useSettings from '../../../hooks/useSettings';\nimport ChevronRightIcon from '../../../icons/ChevronRight';\nimport gtm from '../../../lib/gtm';\n// import useAuth from '../../../hooks/useAuth';\nimport DriversRepository from '../../../repositories/drivers.repository';\n\nconst DriverDetail = () => {\n  const { settings } = useSettings();\n  const driversRepository = new DriversRepository();\n  const [client, setClient] = useState({});\n  // const client = [];\n  const { id } = useParams();\n  //   const { user } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    driversRepository.getDriverById(id).then((res) => {\n      setClient(res.data);\n    })\n      .catch((error) => {\n        console.log(error);\n        navigate('/dasboard/drivers');\n      });\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  if (!(Object.keys(client).length > 0)) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Detalles del Driver | Mac</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Detalle del Driver\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard/drivers\"\n                  variant=\"subtitle2\"\n                >\n                  Listado de Drivers\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Detalle del Driver\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n          </Grid>\n          <Divider />\n          <Box sx={{ mt: 3 }}>\n            <AccountGeneralSettings\n              driver={client}\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default DriverDetail;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = experimentalStyled(ButtonBase, {}, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: theme.spacing(0.5),\n  marginRight: theme.spacing(0.5)\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = experimentalStyled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const styleProps = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      styleProps: styleProps,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        styleProps: styleProps\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return _extends({\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root);\n  }\n})({});\nconst BreadcrumbsOl = experimentalStyled('ol', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = experimentalStyled('li', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, styleProps) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        styleProps: styleProps,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const styleProps = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      styleProps: styleProps,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Breadcrumbs;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import axios from 'axios';\nimport { EndpointConfig } from '../config/config';\n\nexport default class DriversRepository {\n  // Definir el cliente Axios para consumir el servicio\n  get ws() {\n    const cfg = new EndpointConfig();\n    const ws = axios.create({\n      baseURL: cfg.URL_DEV,\n      headers: cfg.headerToken(),\n    });\n    return ws;\n  }\n\n  async getAllDrivers() {\n    const endpoint = '/drivers';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getDriverById(id) {\n    const endpoint = `/drivers/${id}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  //   async update(id, body) {\n  //     const endpoint = `/users/${id}`;\n\n  //     let res = await this.ws.put(endpoint, body);\n  //     return res;\n  //   }\n}\n"],"sourceRoot":""}